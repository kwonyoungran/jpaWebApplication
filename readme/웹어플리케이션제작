1. 프로젝트 사용기술
- 뷰: JSP, JSTL
- 웹계층: 스프링 MVC
- 데이터 저장 계층: JPA, 하이버네이트
- 기반 프레임워크: 스프링 프레임워크
- 빌드: 메이블


2. 프로젝트 구조
japWebApplicaion
    src
        main(실행코드)
            java
                jpashop
                    domain          //도메인계층
                    repository      //데이터 저장 계층
                    service         //서비스 계층
                    web             //웹 계층
            resources
                appConfig.xml       //스프링 애플리케이션 관련 설정
                webAppConfig.xml    //스프링 웹 관련 설정
            webapp
                WEB-INF
                    web.xml         //웹 어플리케이션 환경설정 파일

3. 애플리케이션 구현
가. 회원기능
    - 회원등록
    - 회원목록조회
나. 상품기능
    - 상품등록
    - 상품목록조회
    - 상품수정
다. 주문기능
    - 상품주문
    - 주문내역조회
    - 주문취소



[참고]
1. 메이븐 <dependency>의 <scope> 설정
- compile(기본값): 컴파일시 라이브러리를 사용
- runtime: 실행시 라이브러리 사용
- provided: 외부에서 라이브러리 제공, 컴파일시 사용하지만 빌드에 포함하지 않는다. 보통 JPA, Servlet 라이브러리들에 사용한다
- test: 테스트 코드에만 사용

2. 서버모드 설정
 - H2 데이터베이스를 서버모드로 접근하려면 url 속성을 다음처럼 변경
 - jdbc:h2:tcp://localhost/~/jpashop;MVCC=TRUE

3. hibernate.hbm2ddl.auto: 에플리케이션이 시작될 때 테이블과 기타 DDL을 자동으로 생성(4가지 옵션)
 - create: 기존 DDL을 제거하고 새로생성
 - create-drop: create와 같은데 애플리케이션을 종료할때 생성한 DDL을 제거
 - update: 현재 데이터베이스 DDL과 비교해서 변경사항만 수정
 - validate: 현재 엔티티 매핑정보와 데이터베이스 스키마가 같은지 비교하고 다르면 경고 후 어플리케이션을 실행하지 않음(DDL 변경하지 않음)

 4. 하이버네이트 SQL 로그를 콘솔이 아닌 로거를 통해 남기려면 logback.xml 설정 수정
   - org.hibernate.SQL: hibernate.show_sql 속성과 거의 같은 로그를 남김
   - org.hibernate.type: 실행된 SQL에 바인딩된 파라미터 정보를 로그로 남김
   * logback.xml 설정
   <logger name="org.hibernate.SQL" level="DEBUG"> ... </logger>
   <logger name="org.hibernate.type" level="TRACE"> ... </logger>
   -> 로거를 설정하면 hibernate.show_sql 옵션을 꺼야 콘솔에 로그가 중복 출력 되지 않는다